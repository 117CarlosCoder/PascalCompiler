
package com.compiladores.UI;

import com.compiladores.Simbolo.Simbolo;
import com.compiladores.Simbolo.TablaSimbolos;

import javax.swing.table.DefaultTableModel;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;


public class ReporteSimbolos extends javax.swing.JPanel {

    /**
     * Creates new form ReporteSimbolos
     */
    public ReporteSimbolos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jTable1.setModel(new DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "No", "Id", "Tipo", "Tipo", "Entorno", "Valor", "Linea", "Columna"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(25);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 725, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void panelReporte( TablaSimbolos tablas){

        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.setRowCount(0);  // Limpiar los datos existentes

        int i = 1;
        
        HashMap<String, Object> mapa = tablas.getTablaAct();
        for (Map.Entry<String, Object> entry : mapa.entrySet()) {
            String key = entry.getKey();
            Object value = entry.getValue();
            
            Object[] row = new Object[8];
            row[0] = i++;
            row[1] = key;
            row[2] = ((Simbolo)value).getTipoDeclaracion();
            row[3] = ((Simbolo)value).getTipo().getTipo();
            row[4] = tablas.getNombre();
            row[5] = ((Simbolo)value).getValor();
            row[6] = ((Simbolo)value).getLinea();
            row[7] = ((Simbolo)value).getColumna();
            modelo.addRow(row);
            
            System.out.println("Clave: " + key + ", Valor: " + value);
        }
        
        multiplesTablas(tablas.getTablasTotales(), i);
        
    }
    
    public void multiplesTablas(LinkedList<TablaSimbolos> tablas,int i){
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        for (TablaSimbolos tablasn : tablas) {
                HashMap<String, Object> mapa2 = tablasn.getTablaAct();
                for (Map.Entry<String, Object> entry : mapa2.entrySet()) {
                    String key = entry.getKey();
                    Object value = entry.getValue();

                    Object[] row = new Object[8];
                    row[0] = i++;
                    row[1] = key;
                    row[2] = ((Simbolo)value).getTipoDeclaracion();
                    row[3] = ((Simbolo)value).getTipo().getTipo();
                    row[4] = tablasn.getNombre();
                    row[5] = ((Simbolo)value).getValor();
                    row[6] = ((Simbolo)value).getLinea();
                    row[7] = ((Simbolo)value).getColumna();
                    modelo.addRow(row);

                    System.out.println("Clave: " + key + ", Valor: " + value);
                    if (!tablasn.getTablasTotales().isEmpty()) {
                        multiplesTablas(tablasn.getTablasTotales(),i);
                    }               
                }
                if (!tablasn.getTablasTotales().isEmpty()) {
                        multiplesTablas(tablasn.getTablasTotales(),i);
                }    
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
